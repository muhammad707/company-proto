syntax = "proto3";
package owner;

/* COMPANY SERVICE */
service CompanyService {
  rpc CreateCompany (CreateCompanyRequest) returns (CreateCompanyResponse) {}
  rpc GetCompany (GetCompanyRequest) returns (GetCompanyResponse) {}
  rpc GetCompanies (GetCompaniesRequest) returns (GetCompaniesResponse) {}
}

message CompanyData {
  Status status = 1;
  string name = 2;
  string legalName = 3;
  string logo = 4;
  string description = 5;
  string mfo = 6;
  HolderType holderType = 7;
  string directorFullName = 8;
  string bankName = 9;
  string branchName = 10;
  string branchCode = 11;
  string oked = 12;
  string inn = 13;
  string phone = 14;
  string email = 15;
  OrderType orderType = 16;
  string legalAddress = 17;
  Address address = 18;
  int32 createdAt = 19;
  int32 updatedAt = 20;
  int32 deletedAt = 21;
}

// Address
message Address {
  string latitude = 1;
  string longitude = 2;
  string name = 3;
  string street = 4;
  string city = 5;
  string home = 6;
  string postalCode = 7;
  string apartment = 8;
  string comment = 9;
  string domofon = 10;
  string address = 11;
  int32 regionId = 12;
  int32 districtId = 13;
}

message CreateCompanyRequest {
  CompanyData companyData = 1;
}

message CreateCompanyResponse {
  string id = 1;
  repeated string error = 2;
  int32 status = 3;
}

message GetCompaniesRequest {
  int32 skip = 1;
  int32 limit = 2;
}

message GetCompaniesResponse {
  int32 status = 1;
  int32 count = 2;
  repeated string error = 3;
  repeated CompanyData data = 4;
}

message GetCompanyRequest {
  string id = 1;
}

message GetCompanyResponse {
  int32 status = 1;
  repeated string error = 2;
  CompanyData data = 3;
}

 /* ENUMS   */
enum Status {
  ACTIVE = 0;
  BLOCKED = 1;
  PENDING = 2;
  PAUSED = 3;
}

enum HolderType {
  INDIVIDUAL = 0;
  LTD = 1;
}

enum OrderType {
  ALL = 0;
  PREORDER = 1;
  END_PRODUCT = 2;
}